-- Users Table
CREATE TABLE User (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    role VARCHAR(20) NOT NULL -- student, employee, or company
);

-- Ratings Table
CREATE TABLE Rating (
    id INT AUTO_INCREMENT PRIMARY KEY,
    from_id INT NOT NULL,
    to_id INT NOT NULL,
    rating INT NOT NULL,
    comment TEXT,
    FOREIGN KEY (from_id) REFERENCES User(id),
    FOREIGN KEY (to_id) REFERENCES User(id)
);

-- Profile Table (1 resume per user, with personal details)
CREATE TABLE Profile (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL UNIQUE,
    resume_path VARCHAR(255),
    full_name VARCHAR(100),
    course_year VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(20),
    location VARCHAR(100),
    FOREIGN KEY (user_id) REFERENCES User(id)
);

-- Education Table (multiple per user)
CREATE TABLE Education (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    degree VARCHAR(100), -- Degree/Qualification
    institution VARCHAR(100), -- Institution Name
    duration VARCHAR(50), -- Year - Year
    grade VARCHAR(20), -- Grade/Score
    FOREIGN KEY (user_id) REFERENCES User(id)
);

-- Experience Table (multiple per user)
CREATE TABLE Experience (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    position VARCHAR(100), -- Position/Role
    company VARCHAR(100), -- Company/Organization
    duration VARCHAR(50), -- Month Year - Month Year
    description TEXT, -- Description of role and responsibilities
    FOREIGN KEY (user_id) REFERENCES User(id)
);

-- Projects Table (multiple per user)
CREATE TABLE Project (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    project_name VARCHAR(255), -- Project Title
    project_type VARCHAR(100), -- Project Type
    duration VARCHAR(50), -- Month Year - Month Year
    description TEXT, -- Description of project, technologies, role
    FOREIGN KEY (user_id) REFERENCES User(id)
);

-- Skills Table (multiple per user)
CREATE TABLE Skill (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    skill_name VARCHAR(100), -- Skill Name
    FOREIGN KEY (user_id) REFERENCES User(id)
);

-- Certificates Table (Achievements & Certifications, multiple per user)
CREATE TABLE Certificate (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    certification_name VARCHAR(100), -- Certification Name
    issuer VARCHAR(100), -- Issuing Organization
    duration VARCHAR(50), -- Month Year - Month Year (or No Expiry)
    credential_id VARCHAR(100), -- Credential ID
    FOREIGN KEY (user_id) REFERENCES User(id)
);

-- Save Applications
CREATE TABLE Application (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    internship_id INT NOT NULL,
    applied_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES User(id)
);